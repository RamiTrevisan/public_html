@{
    ViewBag.Title = "Cuotas de actividades";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h3>Cuotas de actividades</h3>
<br />

@using (Html.BeginForm("Pagar", "Actividades"))
{
    <table id="tablaCuotas" class="table table-hover table-bordered table-responsive-md"></table>
    <br />
    <button type="submit" class="btn btn-primary">Ir a pagar</button>
}

@if (TempData["Error"] != null)
{
    <div class="modal fade" id="errorModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Algo no salió bien...</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.Raw(TempData["Error"])
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script>
        $(document).ready(function () {
            $('#errorModal').modal('show');

            $("#tablaCuotas").DataTable({

                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": false,
                "ordering": false,
                "responsive": true,
                "autoWidth": false,
                "pageLength": 25,
                "dom": "<'row'<'col-sm-6 col-xs-12'B><'col-sm-6 col-xs-12'f>><'row'<'col-12'rt>><'row'<'col-sm-6'i><'col-sm-6'p>>",

                "buttons": [
                    {
                        "extend": 'pageLength',
                        "className": 'btn btn-secondary',
                    }
                ],

                "lengthMenu": [
                    [10, 25, 50, 100],
                    ['10 filas', '25 filas', '50 filas', '100 filas']
                ],

                "ajax": {
                    "url": "/Actividades/CargarDeudas",
                    "type": "POST",
                    "datatype": "json"
                },

                "language": {
                    "lengthMenu": "Mostrar _MENU_ filas",
                    "zeroRecords": "Ningún resultado encontrado",
                    "info": "Página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sin datos",
                    "search": "",
                    "searchPlaceholder": "Buscar...",
                    "processing": "Procesando...",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": ">",
                        "previous": "<"
                    }
                },

                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false
                    },
                    {
                        "targets": [1],
                        className: 'select-checkbox'
                    }
                ],

                "columns": [
                    { "data": "caID", "title": "#", "name": "caID" },
                    {
                        "data": null, "defaultContent": "", render: function (row) {
                            return '<input type="checkbox" name="ids" value="' + row.caID + '"/>';
                        }, "width": "1%"
                    },
                    { "data": "socioNombreCompleto", "title": "Socio", "name": "socioNombreCompleto", "width": "20%" },
                    { "data": "caActividadNombre", "title": "Actividad", "name": "caActividadNombre", "width": "20%" },
                    {
                        "data": "caFechaPeriodo", "title": "Período", "name": "caFechaPeriodo", "render": function (data) {
                            return moment(data).format('MMMM YYYY');
                        }, "width": "20%"
                    },
                    {
                        "data": "caFechaVencimiento", "title": "Vencimiento", "name": "caFechaVencimiento", "render": function (data) {
                            return moment(data).format('DD/MM/YYYY');
                        }, "width": "20%"
                    },
                    { "data": "caMonto", "title": "Monto", "name": "caMonto", "width": "19%" }
                ],

                "createdRow": function (row, data, index) {
                    if (moment(data.csFechaVencimiento) < moment()) {
                        $('td', row).css('background-color', '#FDB5B5')
                    }
                }
            });
        });
    </script>
}